/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package automatastarter;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author paul
 */
public class GridPanel extends javax.swing.JPanel {
    // Initialse variables
    public Brain brain;
    private boolean editMode;
    private int min;
    
    /**
     * Creates new form GridPanel
     */
    public GridPanel() {
        initComponents();
    }
    
    // setters
    public void setBrain(Brain brain){
        this.brain = brain;
    }
    
    public void setEditMode(boolean b){
        editMode = b;
    }
    
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        // This line is necessary to address issues in netBeans design mode
        if (brain == null || getWidth() == 0) return;
        int width = getWidth();
        int height = getHeight();
        
        // Calculate the cell size and make sure it is square
        int cellWidth = width/brain.getWidth();
        int cellHeight = height/brain.getHeight();
        min = (cellWidth > cellHeight) ? cellHeight : cellWidth;
        
        // Erase the grid
        g.setColor(Color.BLACK);
        g.fillRect(0, 0, brain.getWidth() * min, brain.getHeight() * min);
        
        // Iterate through the grid
        for (int i = 0; i < brain.cells.length; i++) {
            for (int j = 0; j < brain.cells[i].length; j++) {
                //print each cell in the row
                if (brain.cells[i][j] == Brain.STATES[Brain.ON]) {
                    g.setColor(Color.RED);
                    g.fillRect(j * min, i * min, min, min);
                } else if (brain.cells[i][j] == Brain.STATES[Brain.DYING]){
                    g.setColor(Color.ORANGE);
                    g.fillRect(j * min, i * min, min, min);
                } 
                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(204, 204, 204));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // When we click on a cell on the grid we toggle between its states
        if (editMode) {
            // Find the cell clicked
            int x = evt.getX();
            int y = evt.getY();
            int j = x / min;
            int i = y / min;
            if (i < brain.getHeight() && j < brain.getWidth()) {
                // If the click is on a cell, toggle it
                brain.switchState(i, j);
                ((GamePanel)getParent()).updateStatus();
                repaint();
            }
        }
    }//GEN-LAST:event_formMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
